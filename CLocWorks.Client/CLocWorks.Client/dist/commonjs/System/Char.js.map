{"version":3,"sources":["System/Char.js","System/Char.ts"],"names":[],"mappings":";;;;;AAKA;;ACCA,SAAA,YAAA,CAA6B,EAA7B,EAAsC;AAErC,WAAO,OAAK,EAAL,IAAY,MAAI,CAAJ,IAAS,MAAI,EAAJ,IAAW,OAAK,GAAL,IAAY,OAAK,GAAL,CAFd;CAAtC;AAAgB,QAAA,YAAA,GAAY,YAAZ;AAIhB,SAAA,QAAA,CAAyB,EAAzB,EAAkC;AAEjC,WAAO,EAAC,IAAI,EAAJ,IAAU,MAAI,EAAJ,IAAY,MAAI,EAAJ,IAAU,MAAI,GAAJ,IAAa,MAAI,GAAJ,IAAW,OAAK,GAAL,IAAY,OAAK,GAAL,CAF3C;CAAlC;AAAgB,QAAA,QAAA,GAAQ,QAAR;AAIhB,SAAA,eAAA,CAAgC,EAAhC,EAAyC;AAExC,WAAO,EAAC,IAAI,EAAJ,IAAU,MAAI,EAAJ,IAAY,MAAI,EAAJ,IAAU,MAAI,EAAJ,IAAY,MAAI,EAAJ,IAAU,MAAI,GAAJ,IAAa,MAAI,GAAJ,IAAW,OAAK,GAAL,IAAY,OAAK,GAAL,CAF1D;CAAzC;AAAgB,QAAA,eAAA,GAAe,eAAf;AAMhB,SAAA,OAAA,CAAwB,OAAxB,EAAqC,KAArC,EAAkD;AAEjD,QAAG,UAAU,MAAV,IAAkB,CAAlB,EACH;AACC,eAAO,MAAI,OAAJ,IAAe,WAAS,EAAT,CADvB;KADA,MAKA;AACC,YAAI,KAAK,QAAQ,UAAR,CAAmB,KAAnB,CAAL,CADL;AAEC,eAAO,MAAI,EAAJ,IAAU,MAAI,EAAJ,CAFlB;KALA;CAFD;AAAgB,QAAA,OAAA,GAAO,OAAP","file":"System/Char.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * From Netjs mscorlib.ts\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n\"use strict\";\nfunction isWhiteSpace(ch) {\n    return ch === 32 || (ch >= 9 && ch <= 13) || ch === 133 || ch === 160;\n}\nexports.isWhiteSpace = isWhiteSpace;\nfunction isLetter(ch) {\n    return (65 <= ch && ch <= 90) || (97 <= ch && ch <= 122) || (ch >= 128 && ch !== 133 && ch !== 160);\n}\nexports.isLetter = isLetter;\nfunction isLetterOrDigit(ch) {\n    return (48 <= ch && ch <= 57) || (65 <= ch && ch <= 90) || (97 <= ch && ch <= 122) || (ch >= 128 && ch !== 133 && ch !== 160);\n}\nexports.isLetterOrDigit = isLetterOrDigit;\nfunction isDigit(chOrStr, index) {\n    if (arguments.length == 1) {\n        return 48 <= chOrStr && chOrStr <= 57;\n    }\n    else {\n        var ch = chOrStr.charCodeAt(index);\n        return 48 <= ch && ch <= 57;\n    }\n}\nexports.isDigit = isDigit;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * From Netjs mscorlib.ts\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nexport function isWhiteSpace(ch:number):boolean\r\n{\r\n\treturn ch===32 || (ch>=9 && ch<=13) || ch===133 || ch===160;\r\n}\r\nexport function isLetter(ch:number):boolean\r\n{\r\n\treturn (65<=ch && ch<=90) || (97<=ch && ch<=122) || (ch>=128 && ch!==133 && ch!==160);\r\n}\r\nexport function isLetterOrDigit(ch:number):boolean\r\n{\r\n\treturn (48<=ch && ch<=57) || (65<=ch && ch<=90) || (97<=ch && ch<=122) || (ch>=128 && ch!==133 && ch!==160);\r\n}\r\nexport function isDigit(ch:number):boolean\r\nexport function isDigit(str:string, index:number):boolean\r\nexport function isDigit(chOrStr:any, index?:number):boolean\r\n{\r\n\tif(arguments.length==1)\r\n\t{\r\n\t\treturn 48<=chOrStr && chOrStr<=57;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar ch = chOrStr.charCodeAt(index);\r\n\t\treturn 48<=ch && ch<=57;\r\n\t}\r\n}\r\n"]}