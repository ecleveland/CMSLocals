{"version":3,"sources":["System/Collections/ReadOnlyCollectionWrapper.js","System/Collections/ReadOnlyCollectionWrapper.ts"],"names":[],"mappings":";;;;AAIA;;;;;;;;ACCA,IAAA,0BAAA,QAAoC,qCAApC,CAAA;AACA,IAAA,2BAAA,QAAqC,0BAArC,CAAA;;IAGA;;;AAEC,aAFD,yBAEC,CAAY,CAAZ,EAA4B;8BAF7B,2BAE6B;;2EAF7B,uCAE6B;;AAI3B,YAAG,CAAC,CAAD,EACF,MAAM,IAAI,wBAAA,qBAAA,CAAsB,YAA1B,CAAN,CADD;AAGA,YAAI,SAAJ,CAP2B;AAQ3B,UAAE,SAAF,GAAc;mBAAI,EAAE,KAAF;SAAJ,CARa;AAS3B,UAAE,aAAF,GAAkB;mBAAK,EAAE,aAAF;SAAL,CATS;;KAA5B;;WAFD;EAA0D,yBAAA,sBAAA;;AAA1D,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADSA,QAAQ,OAAR,GAAkB,yBAAlB","file":"System/Collections/ReadOnlyCollectionWrapper.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n\"use strict\";\nconst ArgumentNullException_1 = require(\"../Exceptions/ArgumentNullException\");\nconst ReadOnlyCollectionBase_1 = require(\"./ReadOnlyCollectionBase\");\nclass ReadOnlyCollectionWrapper extends ReadOnlyCollectionBase_1.ReadOnlyCollectionBase {\n    constructor(c) {\n        super();\n        if (!c)\n            throw new ArgumentNullException_1.ArgumentNullException('collection');\n        var _ = this;\n        _._getCount = () => c.count;\n        _.getEnumerator = () => c.getEnumerator();\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ReadOnlyCollectionWrapper;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"./ReadOnlyCollectionBase\";\r\nimport {ICollection} from \"./ICollection\";\r\n\r\nexport default class ReadOnlyCollectionWrapper<T> extends ReadOnlyCollectionBase<T>\r\n{\r\n\tconstructor(c:ICollection<T>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(!c)\r\n\t\t\tthrow new ArgumentNullException('collection');\r\n\r\n\t\tvar _ = this;\r\n\t\t_._getCount = ()=>c.count;\r\n\t\t_.getEnumerator = ()=> c.getEnumerator();\r\n\t}\r\n}\r\n"]}