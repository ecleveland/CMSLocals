{"version":3,"sources":["System/Exceptions/SystemException.js","System/Exceptions/SystemException.ts"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;ACCA,IAAA,cAAA,QAAwB,cAAxB,CAAA;AAEA,IAAM,OAAc,iBAAd;;IAEN;;;;;;;;;;;kCAYkB;AAEhB,mBAAO,IAAP,CAFgB;;;;WAZlB;EAAqC,YAAA,SAAA;;AAAxB,QAAA,eAAA,GAAe,eAAf;AAkBb,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADbA,QAAQ,OAAR,GCae,eDbf","file":"System/Exceptions/SystemException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\n */\n\"use strict\";\nconst Exception_1 = require(\"../Exception\");\nconst NAME = 'SystemException';\nclass SystemException extends Exception_1.Exception {\n    getName() {\n        return NAME;\n    }\n}\nexports.SystemException = SystemException;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SystemException;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {Exception} from \"../Exception\";\r\n\r\nconst NAME:string = 'SystemException';\r\n\r\nexport class SystemException extends Exception\r\n{\r\n\t/*\r\n\t\tconstructor(\r\n\t\t\tmessage:string = null,\r\n\t\t\tinnerException:Error = null,\r\n\t\t\tbeforeSealing?:(ex:any)=>void)\r\n\t\t{\r\n\t\t\tsuper(message, innerException, beforeSealing);\r\n\t\t}\r\n\t*/\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n}\r\n\r\nexport default SystemException;"]}