{"version":3,"sources":["System/Exceptions/ArgumentException.js","System/Exceptions/ArgumentException.ts"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;ACEA,IAAA,oBAAA,QAA8B,mBAA9B,CAAA;AACA,IAAA,YAAA,QAAmB,iBAAnB,CAAA;AAGA,IAAM,OAAc,mBAAd;;IAEN;;;AAMC,aAND,iBAMC,CACC,SADD,EAI8B;YAF7B,gEAAiB,oBAEY;YAD7B,uEAAuB,oBACM;YAA7B,6BAA6B;;8BAV/B,mBAU+B;;AAE7B,YAAI,KAAK,YAAa,MAAM,SAAN,GAAkB,IAAlB,GAA0B,EAAvC,CAFoB;sEAV/B,8BAaQ,UAAA,IAAA,CAAK,MAAM,WAAS,EAAT,CAAN,GAAqB,gBAAgB,UAAC,CAAD,EAAE;AACjD,cAAE,SAAF,GAAc,SAAd,CADiD;AAEjD,gBAAG,aAAH,EAAkB,cAAc,CAAd,EAAlB;SAF+C,GAHnB;KAJ9B;;iBAND;;kCAoBkB;AAEhB,mBAAO,IAAP,CAFgB;;;;WApBlB;EAAuC,kBAAA,eAAA;;AAA1B,QAAA,iBAAA,GAAiB,iBAAjB;AA2Bb,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADhBA,QAAQ,OAAR,GCgBe,iBDhBf","file":"System/Exceptions/ArgumentException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n\"use strict\";\nconst SystemException_1 = require(\"./SystemException\");\nconst Utility_1 = require(\"../Text/Utility\");\nconst NAME = 'ArgumentException';\nclass ArgumentException extends SystemException_1.SystemException {\n    constructor(paramName, message = null, innerException = null, beforeSealing) {\n        var pn = paramName ? ('{' + paramName + '} ') : '';\n        super(Utility_1.trim(pn + (message || '')), innerException, (_) => {\n            _.paramName = paramName;\n            if (beforeSealing)\n                beforeSealing(_);\n        });\n    }\n    getName() {\n        return NAME;\n    }\n}\nexports.ArgumentException = ArgumentException;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArgumentException;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n\r\nimport {SystemException} from \"./SystemException\";\r\nimport {trim} from \"../Text/Utility\";\r\n\r\n\r\nconst NAME:string = 'ArgumentException';\r\n\r\nexport class ArgumentException extends SystemException\r\n{\r\n\r\n\tparamName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Error = null,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tvar pn = paramName ? ('{' + paramName + '} ') : '';\r\n\t\tsuper(trim(pn + (message||'')), innerException, (_)=>{\r\n\t\t\t_.paramName = paramName;\r\n\t\t\tif(beforeSealing) beforeSealing(_);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentException;"]}