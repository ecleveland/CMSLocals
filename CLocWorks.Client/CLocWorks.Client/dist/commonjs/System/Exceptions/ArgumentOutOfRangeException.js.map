{"version":3,"sources":["System/Exceptions/ArgumentOutOfRangeException.js","System/Exceptions/ArgumentOutOfRangeException.ts"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;ACGA,IAAA,sBAAA,QAAgC,qBAAhC,CAAA;AAEA,IAAM,OAAc,6BAAd;;IAEN;;;AAIC,aAJD,2BAIC,CACC,SADD,EAEC,WAFD,EAIgC;YAD/B,gEAAiB,mBACc;YAA/B,uEAA2B,oBAAI;;8BARjC,6BAQiC;;sEARjC,wCAUQ,WAAW,QAAM,mBAAN,GAAwB,OAAxB,EAAkC,gBAAgB,UAAC,CAAD,EAAE;AACpE,cAAE,WAAF,GAAgB,WAAhB,CADoE;SAAF,GAFpC;KAJhC;;iBAJD;;kCAgBkB;AAEhB,mBAAO,IAAP,CAFgB;;;;WAhBlB;EAAiD,oBAAA,iBAAA;;AAApC,QAAA,2BAAA,GAA2B,2BAA3B;AAuBb,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADfA,QAAQ,OAAR,GCee,2BDff","file":"System/Exceptions/ArgumentOutOfRangeException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n\"use strict\";\nconst ArgumentException_1 = require(\"./ArgumentException\");\nconst NAME = 'ArgumentOutOfRangeException';\nclass ArgumentOutOfRangeException extends ArgumentException_1.ArgumentException {\n    constructor(paramName, actualValue, message = ' ', innerException = null) {\n        super(paramName, +`(${actualValue}) ` + message, innerException, (_) => {\n            _.actualValue = actualValue;\n        });\n    }\n    getName() {\n        return NAME;\n    }\n}\nexports.ArgumentOutOfRangeException = ArgumentOutOfRangeException;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArgumentOutOfRangeException;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n\r\nimport {Exception} from \"../Exception\";\r\nimport {ArgumentException} from \"./ArgumentException\";\r\n\r\nconst NAME:string = 'ArgumentOutOfRangeException';\r\n\r\nexport class ArgumentOutOfRangeException extends ArgumentException\r\n{\r\n\tactualValue:string|number|boolean;\r\n\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tactualValue:string|number|boolean,\r\n\t\tmessage:string = ' ',\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(paramName, + `(${actualValue}) ` + message , innerException, (_)=>{\r\n\t\t\t_.actualValue = actualValue;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentOutOfRangeException;"]}