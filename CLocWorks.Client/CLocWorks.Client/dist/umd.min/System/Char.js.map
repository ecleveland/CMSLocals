{"version":3,"sources":["System/Char.js","System/Char.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","isWhiteSpace","ch","isLetter","isLetterOrDigit","isDigit","chOrStr","index","arguments","length","charCodeAt"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,WAAYN,IAEpC,SAAUI,EAASF,GAClB,YCPJ,SAAAM,GAA6BC,GAE5B,MAAY,MAALA,GAAYA,GAAI,GAAS,IAAJA,GAAgB,MAALA,GAAiB,MAALA,EAEpD,QAAAC,GAAyBD,GAExB,MAAYA,IAAJ,IAAc,IAAJA,GAAgBA,GAAJ,IAAc,KAAJA,GAAaA,GAAI,KAAY,MAALA,GAAiB,MAALA,EAE7E,QAAAE,GAAgCF,GAE/B,MAAYA,IAAJ,IAAc,IAAJA,GAAgBA,GAAJ,IAAc,IAAJA,GAAgBA,GAAJ,IAAc,KAAJA,GAAaA,GAAI,KAAY,MAALA,GAAiB,MAALA,EAInG,QAAAG,GAAwBC,EAAaC,GAEpC,GAAqB,GAAlBC,UAAUC,OAEZ,MAAWH,IAAJ,IAAwB,IAATA,CAItB,IAAIJ,GAAKI,EAAQI,WAAWH,EAC5B,OAAWL,IAAJ,IAAc,IAAJA,EAvBHP,EAAAM,aAAYA,EAIZN,EAAAQ,SAAQA,EAIRR,EAAAS,gBAAeA,EAMfT,EAAAU,QAAOA","file":"System/Char.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * From Netjs mscorlib.ts\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    function isWhiteSpace(ch) {\n        return ch === 32 || (ch >= 9 && ch <= 13) || ch === 133 || ch === 160;\n    }\n    exports.isWhiteSpace = isWhiteSpace;\n    function isLetter(ch) {\n        return (65 <= ch && ch <= 90) || (97 <= ch && ch <= 122) || (ch >= 128 && ch !== 133 && ch !== 160);\n    }\n    exports.isLetter = isLetter;\n    function isLetterOrDigit(ch) {\n        return (48 <= ch && ch <= 57) || (65 <= ch && ch <= 90) || (97 <= ch && ch <= 122) || (ch >= 128 && ch !== 133 && ch !== 160);\n    }\n    exports.isLetterOrDigit = isLetterOrDigit;\n    function isDigit(chOrStr, index) {\n        if (arguments.length == 1) {\n            return 48 <= chOrStr && chOrStr <= 57;\n        }\n        else {\n            var ch = chOrStr.charCodeAt(index);\n            return 48 <= ch && ch <= 57;\n        }\n    }\n    exports.isDigit = isDigit;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * From Netjs mscorlib.ts\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nexport function isWhiteSpace(ch:number):boolean\r\n{\r\n\treturn ch===32 || (ch>=9 && ch<=13) || ch===133 || ch===160;\r\n}\r\nexport function isLetter(ch:number):boolean\r\n{\r\n\treturn (65<=ch && ch<=90) || (97<=ch && ch<=122) || (ch>=128 && ch!==133 && ch!==160);\r\n}\r\nexport function isLetterOrDigit(ch:number):boolean\r\n{\r\n\treturn (48<=ch && ch<=57) || (65<=ch && ch<=90) || (97<=ch && ch<=122) || (ch>=128 && ch!==133 && ch!==160);\r\n}\r\nexport function isDigit(ch:number):boolean\r\nexport function isDigit(str:string, index:number):boolean\r\nexport function isDigit(chOrStr:any, index?:number):boolean\r\n{\r\n\tif(arguments.length==1)\r\n\t{\r\n\t\treturn 48<=chOrStr && chOrStr<=57;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar ch = chOrStr.charCodeAt(index);\r\n\t\treturn 48<=ch && ch<=57;\r\n\t}\r\n}\r\n"]}