/*!
 * @author electricessence / https://github.com/electricessence/
 * Based upon .NET source.
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 * Source: http://referencesource.microsoft.com/#mscorlib/system/IObserver.cs
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var i=e(require,exports);void 0!==i&&(module.exports=i)}else"function"==typeof define&&define.amd&&define(["require","exports","../Collections/LinkedNodeList","../Disposable/dispose","./Subscription"],e)}(function(e,i){"use strict";var t=e("../Collections/LinkedNodeList"),s=e("../Disposable/dispose"),n=e("./Subscription"),o=function(){function e(){this.__subscriptions=new t.LinkedNodeList}return e.prototype._getSubscribers=function(){return this.__subscriptions.map(function(e){return e.value&&e.value.subscriber})},e.prototype._findEntryNode=function(e){return this.__subscriptions.find(function(i){return i.value.subscriber===e})},e.prototype.subscribe=function(e){var i=this,t=i._findEntryNode(e);if(t)return t.value;var s=new n.Subscription(i,e);return i.__subscriptions.addNode({value:s}),s},e.prototype.unsubscribe=function(e){var i=this,t=i._findEntryNode(e);if(t){var s=t.value;i.__subscriptions.removeNode(t),s.dispose()}},e.prototype._unsubscribeAll=function(e){void 0===e&&(e=!1);var i=this,t=i.__subscriptions,n=t.map(function(e){return e.value}),o=e?n.map(function(e){return e.subscriber}):null;return t.clear(),s.dispose.these(n),o},e.prototype.unsubscribeAll=function(){this._unsubscribeAll()},e.prototype.dispose=function(){this._unsubscribeAll()},e}();i.SubscribableBase=o,Object.defineProperty(i,"__esModule",{value:!0}),i["default"]=o});
//# sourceMappingURL=SubscribableBase.js.map
