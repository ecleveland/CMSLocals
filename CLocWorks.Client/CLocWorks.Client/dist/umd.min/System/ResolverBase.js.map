{"version":3,"sources":["System/ResolverBase.js","System/ResolverBase.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","DisposableBase_1","ArgumentNullException_1","ResolverBase","_super","_valueFactory","_trapExceptions","_allowReset","call","ArgumentNullException","_isValueCreated","getError","_error","defineProperty","get","enumerable","configurable","getValue","_","throwIfDisposed","Error","c","_value","ex","_onDispose","tryReset","DisposableBase","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,8BAA+B,sCAAuCN,IAEzG,SAAUI,EAASF,GAClB,YCZJ,IAAAM,GAAAJ,EAA6B,+BAE7BK,EAAAL,EAAoC,sCAQpCM,EAAA,SAAAC,GAMC,QAAAD,GACWE,EACFC,EACAC,GAGR,GADAH,EAAAI,KAAAzB,MAJUA,KAAAsB,cAAAA,EACFtB,KAAAuB,gBAAAA,EACAvB,KAAAwB,YAAAA,GAGJF,EAAe,KAAM,IAAIH,GAAAO,sBAAsB,eACnD1B,MAAK2B,iBAAkB,EAqFzB,MAlG8C5B,WAAAqB,EAAAC,GAkBnCD,EAAAb,UAAAqB,SAAV,WAEC,MAAO5B,MAAK6B,QAGbrB,OAAAsB,eAAIV,EAAAb,UAAA,SDHOwB,ICGX,WAEC,MAAO/B,MAAK4B,YDFFI,YAAY,EACZC,cAAc,ICIzBb,EAAAb,UAAA2B,SAAA,WAGC,GAAIC,GAAInC,IAIR,IAFAmC,EAAEC,kBAEqB,OAApBD,EAAER,gBACJ,KAAM,IAAIU,OAAM,sBAEjB,KAAIF,EAAER,iBAAmBQ,EAAEb,cAC3B,CACCa,EAAER,gBAAkB,IACpB,KAEC,GAAIW,GAAC,MACL,KAAIH,EAAER,kBAAoBW,EAAIH,EAAEb,eAChC,CACCa,EAAER,gBAAkB,KAChB3B,KAAKwB,cAAaxB,KAAKsB,cAAgB,KAC3C,IAAIT,GAAIyB,GAGR,OAFAH,GAAEI,OAAS1B,EACXsB,EAAEN,OAAS,OACJhB,GAGT,MAAM2B,GAGL,GADAL,EAAEN,OAASW,GACPL,EAAEZ,gBAAiB,KAAMiB,GDPjB,QCWZL,EAAER,iBAAkB,GAMtB,MAAOQ,GAAEI,QAIV/B,OAAAsB,eAAIV,EAAAb,UAAA,YDdOwB,ICcX,WAEC,MAAO/B,MAAKwB,eAAiBxB,KAAKsB,eDbxBU,YAAY,EACZC,cAAc,ICefb,EAAAb,UAAAkC,WAAV,WAECzC,KAAKsB,cAAgB,KACrBtB,KAAKuC,OAAS,KACdvC,KAAK2B,gBAAkB,MAGxBP,EAAAb,UAAAmC,SAAA,WAEC,GAAIP,GAAInC,IAER,OAAImC,GAAEb,eAILa,EAAER,iBAAkB,EACpBQ,EAAEI,OAAS,KACXJ,EAAEN,OAAS,QACJ,IANA,GAUVT,GAlG8CF,EAAAyB,eAAxB/B,GAAAQ,aAAYA,EAoGlCZ,OAAAsB,eAAAlB,EAAA,cAAAgC,OAAA,IDjBIhC,EAAAA,WCiBWQ","file":"System/ResolverBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"./Disposable/DisposableBase\", \"./Exceptions/ArgumentNullException\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var DisposableBase_1 = require(\"./Disposable/DisposableBase\");\n    var ArgumentNullException_1 = require(\"./Exceptions/ArgumentNullException\");\n    var ResolverBase = (function (_super) {\n        __extends(ResolverBase, _super);\n        function ResolverBase(_valueFactory, _trapExceptions, _allowReset) {\n            _super.call(this);\n            this._valueFactory = _valueFactory;\n            this._trapExceptions = _trapExceptions;\n            this._allowReset = _allowReset;\n            if (!_valueFactory)\n                throw new ArgumentNullException_1.ArgumentNullException(\"valueFactory\");\n            this._isValueCreated = false;\n        }\n        ResolverBase.prototype.getError = function () {\n            return this._error;\n        };\n        Object.defineProperty(ResolverBase.prototype, \"error\", {\n            get: function () {\n                return this.getError();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ResolverBase.prototype.getValue = function () {\n            var _ = this;\n            _.throwIfDisposed();\n            if (_._isValueCreated === null)\n                throw new Error(\"Recursion detected.\");\n            if (!_._isValueCreated && _._valueFactory) {\n                _._isValueCreated = null;\n                try {\n                    var c = void 0;\n                    if (!_._isValueCreated && (c = _._valueFactory)) {\n                        _._isValueCreated = null;\n                        if (!this._allowReset)\n                            this._valueFactory = null;\n                        var v = c();\n                        _._value = v;\n                        _._error = void 0;\n                        return v;\n                    }\n                }\n                catch (ex) {\n                    _._error = ex;\n                    if (!_._trapExceptions)\n                        throw ex;\n                }\n                finally {\n                    _._isValueCreated = true;\n                }\n            }\n            return _._value;\n        };\n        Object.defineProperty(ResolverBase.prototype, \"canReset\", {\n            get: function () {\n                return this._allowReset && !!this._valueFactory;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ResolverBase.prototype._onDispose = function () {\n            this._valueFactory = null;\n            this._value = null;\n            this._isValueCreated = null;\n        };\n        ResolverBase.prototype.tryReset = function () {\n            var _ = this;\n            if (!_._valueFactory)\n                return false;\n            else {\n                _._isValueCreated = false;\n                _._value = null;\n                _._error = void 0;\n                return true;\n            }\n        };\n        return ResolverBase;\n    }(DisposableBase_1.DisposableBase));\n    exports.ResolverBase = ResolverBase;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ResolverBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {DisposableBase} from \"./Disposable/DisposableBase\";\r\nimport {Func} from \"./FunctionTypes\";\r\nimport {ArgumentNullException} from \"./Exceptions/ArgumentNullException\";\r\n\r\n/**\r\n * The ResolverBase class handles resolving a factory method and detects recursion.\r\n * Since JS does not have a synchronization mechanism (lock or otherwise)\r\n * we have to prevent getValue from double triggering the value factory (optimistic concurrency)\r\n * or returning return a value that is intermediate between resolving and resolved.\r\n */\r\nexport abstract class ResolverBase<T> extends DisposableBase\r\n{\r\n\r\n\tprotected _isValueCreated:boolean;\r\n\tprotected _value:T;\r\n\r\n\tconstructor(\r\n\t\tprotected _valueFactory:Func<T>,\r\n\t\tprivate _trapExceptions:boolean,\r\n\t\tprivate _allowReset?:boolean)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!_valueFactory) throw new ArgumentNullException(\"valueFactory\");\r\n\t\tthis._isValueCreated = false;\r\n\t}\r\n\r\n\tprotected _error:any;\r\n\r\n\tprotected getError():any\r\n\t{\r\n\t\treturn this._error;\r\n\t}\r\n\r\n\tget error():any\r\n\t{\r\n\t\treturn this.getError();\r\n\t}\r\n\r\n\tgetValue():T\r\n\t{\r\n\r\n\t\tvar _ = this;\r\n\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(_._isValueCreated===null)\r\n\t\t\tthrow new Error(\"Recursion detected.\");\r\n\r\n\t\tif(!_._isValueCreated && _._valueFactory)\r\n\t\t{\r\n\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tlet c:Func<T>;\r\n\t\t\t\tif(!_._isValueCreated && (c = _._valueFactory))\r\n\t\t\t\t{\r\n\t\t\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\t\t\tif(!this._allowReset) this._valueFactory = null;\r\n\t\t\t\t\tvar v = c();\r\n\t\t\t\t\t_._value = v;\r\n\t\t\t\t\t_._error = void 0;\r\n\t\t\t\t\treturn v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\t_._error = ex;\r\n\t\t\t\tif(!_._trapExceptions) throw ex;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\t_._isValueCreated = true;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\treturn _._value;\r\n\r\n\t}\r\n\r\n\tget canReset():boolean\r\n\t{\r\n\t\treturn this._allowReset && !!this._valueFactory;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tthis._valueFactory = null;\r\n\t\tthis._value = null;\r\n\t\tthis._isValueCreated = null;\r\n\t}\r\n\r\n\ttryReset():boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\r\n\t\tif(!_._valueFactory)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t{\r\n\t\t\t_._isValueCreated = false;\r\n\t\t\t_._value = null;\r\n\t\t\t_._error = void 0;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default ResolverBase;"]}