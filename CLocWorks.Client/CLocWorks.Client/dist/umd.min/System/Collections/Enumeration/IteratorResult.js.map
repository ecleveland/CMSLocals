{"version":3,"sources":["System/Collections/Enumeration/IteratorResult.js","System/Collections/Enumeration/IteratorResult.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","VOID0","IteratorResult","value","index","done","this","Object","freeze","GetDone","Done","defineProperty"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,WAAYN,IAEpC,SAAUI,EAASF,GAClB,YCLJ,IAAMM,GAAY,OAElBC,EAAA,WAEC,QAAAA,GACQC,EACAC,EACAC,GAAP,SAAAA,IAAAA,GAAA,GAFOC,KAAAH,MAAAA,EACAG,KAAAF,MAAAA,EACAE,KAAAD,KAAAA,EAEPE,OAAOC,OAAOF,MAEhB,MAAAJ,KATaP,GAAAO,eAAcA,CAW3B,IAAcA,IAAd,SAAcA,GAEb,QAAAO,GAAwBN,GAAkC,MAAOD,GAAAQ,KADpDR,EAAAQ,KAA2B,GAAIR,GAAoBD,EAAOA,GAAO,GAC9DC,EAAAO,QAAOA,GAFVP,EAAAP,EAAAO,iBAAAP,EAAAO,oBAKdK,OAAOC,OAAON,GAEdK,OAAAI,eAAAhB,EAAA,cAAAQ,OAAA,IDMIR,EAAAA,WCNWO","file":"System/Collections/Enumeration/IteratorResult.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var VOID0 = void (0);\n    var IteratorResult = (function () {\n        function IteratorResult(value, index, done) {\n            if (done === void 0) { done = false; }\n            this.value = value;\n            this.index = index;\n            this.done = done;\n            Object.freeze(this);\n        }\n        return IteratorResult;\n    }());\n    exports.IteratorResult = IteratorResult;\n    var IteratorResult;\n    (function (IteratorResult) {\n        IteratorResult.Done = new IteratorResult(VOID0, VOID0, true);\n        function GetDone(value) { return IteratorResult.Done; }\n        IteratorResult.GetDone = GetDone;\n    })(IteratorResult = exports.IteratorResult || (exports.IteratorResult = {}));\n    Object.freeze(IteratorResult);\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = IteratorResult;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IIteratorResult} from \"./IIterator\";\r\n\r\nconst VOID0:any = void(0);\r\n\r\nexport class IteratorResult<T> implements IIteratorResult<T>\r\n{\r\n\tconstructor(\r\n\t\tpublic value:T,\r\n\t\tpublic index?:number,\r\n\t\tpublic done:boolean = false)\r\n\t{\r\n\t\tObject.freeze(this);\r\n\t}\r\n}\r\n\r\nexport module IteratorResult {\r\n\texport const Done:IteratorResult<any> = new IteratorResult<any>(VOID0, VOID0, true);\r\n\texport function GetDone(value?:any):IteratorResult<any> { return Done; }\r\n}\r\n\r\nObject.freeze(IteratorResult);\r\n\r\nexport default IteratorResult;"]}