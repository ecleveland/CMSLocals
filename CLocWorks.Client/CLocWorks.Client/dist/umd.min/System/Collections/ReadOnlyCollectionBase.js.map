{"version":3,"sources":["System/Collections/ReadOnlyCollectionBase.js","System/Collections/ReadOnlyCollectionBase.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","CollectionBase_1","ReadOnlyCollectionBase","_super","apply","arguments","getCount","_getCount","getIsReadOnly","_addInternal","entry","_removeInternal","max","_clearInternal","getEnumerator","_getEnumerator","CollectionBase","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,oBAAqBN,IAExD,SAAUI,EAASF,GAClB,YCZJ,IAAAM,GAAAJ,EAA6B,oBAG7BK,EAAA,SAAAC,GAAA,QAAAD,KACQC,EAAAC,MAAArB,KAAAsB,WAqCR,MArCQvB,WAAAoB,EAAAC,GAKGD,EAAAZ,UAAAgB,SAAV,WAEC,MAAOvB,MAAKwB,aAGHL,EAAAZ,UAAAkB,cAAV,WAEC,OAAO,GAGEN,EAAAZ,UAAAmB,aAAV,SAAuBC,GAEtB,OAAO,GAGER,EAAAZ,UAAAqB,gBAAV,SAA0BD,EAASE,GAElC,MAAO,IAGEV,EAAAZ,UAAAuB,eAAV,WAEC,MAAO,IAKRX,EAAAZ,UAAAwB,cAAA,WAEC,MAAO/B,MAAKgC,kBAGdb,GArCQD,EAAAe,eADcrB,GAAAO,uBAAsBA,EAwC5CX,OAAA0B,eAAAtB,EAAA,cAAAuB,OAAA,IDFIvB,EAAAA,WCEWO","file":"System/Collections/ReadOnlyCollectionBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"./CollectionBase\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var CollectionBase_1 = require(\"./CollectionBase\");\n    var ReadOnlyCollectionBase = (function (_super) {\n        __extends(ReadOnlyCollectionBase, _super);\n        function ReadOnlyCollectionBase() {\n            _super.apply(this, arguments);\n        }\n        ReadOnlyCollectionBase.prototype.getCount = function () {\n            return this._getCount();\n        };\n        ReadOnlyCollectionBase.prototype.getIsReadOnly = function () {\n            return true;\n        };\n        ReadOnlyCollectionBase.prototype._addInternal = function (entry) {\n            return false;\n        };\n        ReadOnlyCollectionBase.prototype._removeInternal = function (entry, max) {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype._clearInternal = function () {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype.getEnumerator = function () {\n            return this._getEnumerator();\n        };\n        return ReadOnlyCollectionBase;\n    }(CollectionBase_1.CollectionBase));\n    exports.ReadOnlyCollectionBase = ReadOnlyCollectionBase;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ReadOnlyCollectionBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\n\r\nexport abstract class ReadOnlyCollectionBase<T>\r\nextends CollectionBase<T>\r\n{\r\n\r\n\tprotected _getCount:()=>number;\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._getCount();\r\n\t}\r\n\r\n\tprotected getIsReadOnly():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected _addInternal(entry:T):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _removeInternal(entry:T, max?:number):number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _getEnumerator:()=>IEnumerator<T>;\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\treturn this._getEnumerator();\r\n\t}\r\n\r\n}\r\n\r\nexport default ReadOnlyCollectionBase;"]}