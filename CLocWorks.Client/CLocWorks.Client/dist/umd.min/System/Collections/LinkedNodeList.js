/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Text/Utility","../Exceptions/InvalidOperationException","../Exceptions/ArgumentException","../Exceptions/ArgumentNullException","./Enumeration/EnumeratorBase"],e)}(function(e,t){"use strict";function n(e,t){if(void 0===t&&(t="node"),null==e)throw new u.ArgumentNullException(t);if(e.next||e.previous)throw new o.InvalidOperationException("Cannot add a node to a LinkedNodeList that is already linked.")}var r=e("../Text/Utility"),o=e("../Exceptions/InvalidOperationException"),i=e("../Exceptions/ArgumentException"),u=e("../Exceptions/ArgumentNullException"),s=e("./Enumeration/EnumeratorBase"),f=function(){function e(){this._first=null,this._last=null,this.unsafeCount=0}return Object.defineProperty(e.prototype,"first",{get:function(){return this._first},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"last",{get:function(){return this._last},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"count",{get:function(){for(var e=this._first,t=0;e;)t++,e=e.next;return t},enumerable:!0,configurable:!0}),e.prototype.forEach=function(e){var t=null,n=this.first,r=0;do t=n,n=t&&t.next;while(t&&e(t,r++)!==!1);return r},e.prototype.map=function(e){if(!e)throw new u.ArgumentNullException("selector");var t=[];return this.forEach(function(n){t.push(e(n))}),t},e.prototype.clear=function(){var e,t=this,n=0,r=0;for(e=t._first,t._first=null;e;){n++;var o=e;e=e.next,o.next=null}for(e=t._last,t._last=null;e;){r++;var o=e;e=e.previous,o.previous=null}return n!==r&&console.warn("LinkedNodeList: Forward versus reverse count does not match when clearing. Forward: "+n+", Reverse: "+r),t.unsafeCount=0,n},e.prototype.dispose=function(){this.clear()},e.prototype.contains=function(e){return-1!=this.indexOf(e)},e.prototype.getNodeAt=function(e){if(0>e)return null;for(var t=this._first,n=0;t&&e<n++;)t=t.next;return t},e.prototype.find=function(e){var t=null;return this.forEach(function(n,r){return e(n,r)?(t=n,!1):void 0}),t},e.prototype.indexOf=function(e){if(e&&(e.previous||e.next)){var t,n=0,r=this._first;do{if(t=r,t===e)return n;n++}while(r=t&&t.next)}return-1},e.prototype.removeFirst=function(){return this.removeNode(this._first)},e.prototype.removeLast=function(){return this.removeNode(this._last)},e.prototype.removeNode=function(e){if(null==e)throw new u.ArgumentNullException("node");var t=this,n=e.previous,o=e.next,s=!1,f=!1;if(n?n.next=o:t._first==e?t._first=o:s=!0,o?o.previous=n:t._last==e?t._last=n:f=!0,s!==f)throw new i.ArgumentException("node",r.format("Provided node is has no {0} reference but is not the {1} node!",s?"previous":"next",s?"first":"last"));var a=!s&&!f;return a&&(t.unsafeCount--,e.previous=null,e.next=null),a},e.prototype.addNode=function(e){this.addNodeAfter(e)},e.prototype.addNodeBefore=function(e,t){n(e);var r=this;if(t||(t=r._first),t){var o=t.previous;e.previous=o,e.next=t,t.previous=e,o&&(o.next=e),t==r._first&&(r._last=e)}else r._first=r._last=e;r.unsafeCount++},e.prototype.addNodeAfter=function(e,t){n(e);var r=this;if(t||(t=r._last),t){var o=t.next;e.next=o,e.previous=t,t.next=e,o&&(o.previous=e),t==r._last&&(r._last=e)}else r._first=r._last=e;r.unsafeCount++},e.prototype.replace=function(e,t){if(null==e)throw new u.ArgumentNullException("node");n(t,"replacement");var r=this;t.previous=e.previous,t.next=e.next,e.previous&&(e.previous.next=t),e.next&&(e.next.previous=t),e==r._first&&(r._first=t),e==r._last&&(r._last=t)},e.valueEnumeratorFrom=function(e){if(!e)throw new u.ArgumentNullException("list");var t,n;return new s.EnumeratorBase(function(){t=null,n=e.first},function(e){return n?(t=n,n=t&&t.next,e.yieldReturn(t.value)):e.yieldBreak()})},e.copyValues=function(e,t,n){if(void 0===n&&(n=0),e&&e.first){if(!t)throw new u.ArgumentNullException("array");e.forEach(function(e,r){t[n+r]=e.value})}return t},e}();t.LinkedNodeList=f,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=f});
//# sourceMappingURL=LinkedNodeList.js.map
