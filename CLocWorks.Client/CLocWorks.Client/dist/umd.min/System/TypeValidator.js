/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","./Types","./Compare"],e)}(function(e,t){"use strict";function r(e,t){if(!i.areEqual(e,t)){var r=new o(e);if(!r.contains(t))return!0}return!1}var n=e("./Types"),i=e("./Compare"),o=function(e){function t(t){var r=this;e.call(this,t,function(){return r._value=t})}return __extends(t,e),t.prototype.contains=function(e){var t=this._value;if(t===e)return!0;switch(e){case Function:return this.isFunction;case Object:return this.isObject;case Array:return this.isArray;case String:return this.isString;case Number:return this.isNumber;case Boolean:return this.isBoolean}if(this.type!=typeof e||this.isPrimitive&&!i.areEqual(t,e))return!1;if(this.isArray&&Array.isArray(e)){for(var n=Math.min(e.length,t.length),o=0;n>o;o++)if(r(t[o],e[o]))return!1;return!0}if(this.isObject){var s=Object.keys(t),u=Object.keys(e);if(u.length>s.length)return!1;for(var a=0,c=u;a<c.length;a++){var f=c[a];if(-1==s.indexOf(f))return!1}for(var p=0,h=u;p<h.length;p++){var f=h[p];if(r(t[f],e[f]))return!1}}return!0},t}(n.TypeInfo);t.TypeInfoHelper=o;var s=function(){function e(e){this._typeDescriptor=e,Object.freeze(this)}return e.prototype.isSubsetOf=function(e){var t=new o(e);return t.contains(this._typeDescriptor)},e}();t.TypeValidator=s,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=s});
//# sourceMappingURL=TypeValidator.js.map
