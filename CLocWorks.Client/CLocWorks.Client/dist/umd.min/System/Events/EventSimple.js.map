{"version":3,"sources":["System/Events/EventSimple.js","System/Events/EventSimple.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","EventSimple","this","_listeners","prototype","add","listener","push","remove","index","indexOf","splice","dispatch","params","_i","arguments","length","listeners","_a","listeners_1","f","call","toMulticastFunction","listeners_2","dispose","Object","defineProperty","value"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,WAAYN,IAEpC,SAAUI,EAASF,GAClB,YCAJ,IAAAM,GAAA,WAAA,QAAAA,KAESC,KAAAC,cAuCT,MArCCF,GAAAG,UAAAC,IAAA,SAAIC,GAEHJ,KAAKC,WAAWI,KAAKD,IAGtBL,EAAAG,UAAAI,OAAA,SAAOF,GAEN,GAAIG,GAAQP,KAAKC,WAAWO,QAAQJ,EAC3B,GAANG,GACHP,KAAKC,WAAWQ,OAAOF,EAAO,IAG/BR,EAAAG,UAAAQ,SAAA,WDAW,ICAF,GAAAC,MAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,EAGR,KAAa,GADTG,GAAYf,KAAKC,WACRe,EAAA,EAAAC,EAAAF,EAAAC,EAAAC,EAAAH,OAAAE,IAAU,CAAnB,GAAIE,GAACD,EAAAD,EAERE,GAAEC,KAAKR,KAITZ,EAAAG,UAAAkB,oBAAA,WAEC,GAAIL,GAAYf,KAAKC,UACrB,OAAO,YAEN,IAAa,GAAAW,GAAA,EAAAS,EAAAN,EAAAH,EAAAS,EAAAP,OAAAF,IAAU,CAAnB,GAAIM,GAACG,EAAAT,EAERM,GAAEC,KAAKN,cAKVd,EAAAG,UAAAoB,QAAA,WAECtB,KAAKC,WAAWa,OAAS,GAE3Bf,IAzCAwB,QAAAC,eAAA/B,EAAA,cAAAgC,OAAA,IDwCIhC,EAAAA,WAAkBM","file":"System/Events/EventSimple.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Based on Netjs mscorlib.ts\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var EventSimple = (function () {\n        function EventSimple() {\n            this._listeners = [];\n        }\n        EventSimple.prototype.add = function (listener) {\n            this._listeners.push(listener);\n        };\n        EventSimple.prototype.remove = function (listener) {\n            var index = this._listeners.indexOf(listener);\n            if (index < 0)\n                return;\n            this._listeners.splice(index, 1);\n        };\n        EventSimple.prototype.dispatch = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i - 0] = arguments[_i];\n            }\n            var listeners = this._listeners;\n            for (var _a = 0, listeners_1 = listeners; _a < listeners_1.length; _a++) {\n                var f = listeners_1[_a];\n                f.call(params);\n            }\n        };\n        EventSimple.prototype.toMulticastFunction = function () {\n            var listeners = this._listeners;\n            return function () {\n                for (var _i = 0, listeners_2 = listeners; _i < listeners_2.length; _i++) {\n                    var f = listeners_2[_i];\n                    f.call(arguments);\n                }\n            };\n        };\n        EventSimple.prototype.dispose = function () {\n            this._listeners.length = 0;\n        };\n        return EventSimple;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = EventSimple;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Based on Netjs mscorlib.ts\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IDisposable} from \"../Disposable/IDisposable\";\r\n\r\n/**\r\n * A simple event dispatcher provided as an alternative to built-in event.\r\n * If just dispatching a payload to a uniform set of functions, it may be better to just use the utilities in System/Collections/Array/Dispatch.\r\n */\r\nexport default class EventSimple<T extends Function> implements IDisposable\r\n{\r\n\tprivate _listeners:T[] = [];\r\n\r\n\tadd(listener:T):void\r\n\t{\r\n\t\tthis._listeners.push(listener);\r\n\t}\r\n\r\n\tremove(listener:T):void\r\n\t{\r\n\t\tvar index = this._listeners.indexOf(listener);\r\n\t\tif(index<0) return;\r\n\t\tthis._listeners.splice(index, 1);\r\n\t}\r\n\r\n\tdispatch(...params:any[]):void\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\tfor(var f of listeners)\r\n\t\t{\r\n\t\t\tf.call(params);\r\n\t\t}\r\n\t}\r\n\r\n\ttoMulticastFunction():Function\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\treturn function()\r\n\t\t{\r\n\t\t\tfor(var f of listeners)\r\n\t\t\t{\r\n\t\t\t\tf.call(arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis._listeners.length = 0;\r\n\t}\r\n}"]}