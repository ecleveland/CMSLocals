/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)};define(["require","exports","./Types","./Compare"],function(t,e,r,n){"use strict";function i(t,e){if(!n.areEqual(t,e)){var r=new s(t);if(!r.contains(e))return!0}return!1}var s=function(t){function e(e){var r=this;t.call(this,e,function(){return r._value=e})}return __extends(e,t),e.prototype.contains=function(t){var e=this._value;if(e===t)return!0;switch(t){case Function:return this.isFunction;case Object:return this.isObject;case Array:return this.isArray;case String:return this.isString;case Number:return this.isNumber;case Boolean:return this.isBoolean}if(this.type!=typeof t||this.isPrimitive&&!n.areEqual(e,t))return!1;if(this.isArray&&Array.isArray(t)){for(var r=Math.min(t.length,e.length),s=0;r>s;s++)if(i(e[s],t[s]))return!1;return!0}if(this.isObject){var o=Object.keys(e),u=Object.keys(t);if(u.length>o.length)return!1;for(var a=0,c=u;a<c.length;a++){var f=c[a];if(-1==o.indexOf(f))return!1}for(var h=0,p=u;h<p.length;h++){var f=p[h];if(i(e[f],t[f]))return!1}}return!0},e}(r.TypeInfo);e.TypeInfoHelper=s;var o=function(){function t(t){this._typeDescriptor=t,Object.freeze(this)}return t.prototype.isSubsetOf=function(t){var e=new s(t);return e.contains(this._typeDescriptor)},t}();e.TypeValidator=o,Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=o});
//# sourceMappingURL=TypeValidator.js.map
