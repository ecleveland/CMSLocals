/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var o in r)r.hasOwnProperty(o)&&(t[o]=r[o]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)};define(["require","exports","../Compare","./Array/Utility","./Enumeration/Enumerator","../Types","./Enumeration/ArrayEnumerator","./CollectionBase"],function(t,r,e,o,n,i,u,s){"use strict";var c=function(t){function r(r,o){void 0===o&&(o=e.areEqual),t.call(this,null,o);var n=this;Array.isArray(r)?n._source=r.slice():(n._source=[],n._importEntries(r))}return __extends(r,t),r.prototype.getCount=function(){return this._source.length},r.prototype._addInternal=function(t){return this._source.push(t),!0},r.prototype._removeInternal=function(t,r){return void 0===r&&(r=1/0),o.remove(this._source,t,r,this._equalityComparer)},r.prototype._clearInternal=function(){var t=this._source.length;return this._source.length=0,t},r.prototype._importEntries=function(r){if(i.Type.isArrayLike(r)){var e=r.length;if(!e)return 0;var o=this._source,n=o.length;o.length+=e;for(var u=0;e>u;u++)o[u+n]=r[u];return e}return t.prototype._importEntries.call(this,r)},r.prototype.get=function(t){return this._source[t]},r.prototype.set=function(t,r){var o=this._source;return t<o.length&&e.areEqual(r,o[t])?!1:(o[t]=r,this._onModified(),!0)},r.prototype.indexOf=function(t){return o.indexOf(this._source,t,this._equalityComparer)},r.prototype.insert=function(t,r){var e=this._source;t<e.length?this._source.splice(t,0,r):this._source[t]=r,this._onModified()},r.prototype.removeAt=function(t){return o.removeIndex(this._source,t)?(this._onModified(),!0):!1},r.prototype.contains=function(t){return o.contains(this._source,t,this._equalityComparer)},r.prototype.copyTo=function(t,r){return o.copyTo(this._source,t,0,r)},r.prototype.getEnumerator=function(){return new u.ArrayEnumerator(this._source)},r.prototype.forEach=function(t,r){var e=this._source;return n.forEach(r?e.slice():e,t)},r}(s.CollectionBase);r.List=c,Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=c});
//# sourceMappingURL=List.js.map
