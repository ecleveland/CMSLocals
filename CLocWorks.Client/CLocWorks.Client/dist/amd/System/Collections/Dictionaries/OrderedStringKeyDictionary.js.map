{"version":3,"sources":["System/Collections/Dictionaries/OrderedStringKeyDictionary.js","System/Collections/Dictionaries/OrderedStringKeyDictionary.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","ArrayUtility","StringKeyDictionary_1","ArgumentOutOfRangeException_1","VOID0","OrderedStringKeyDictionary","_super","call","_order","indexOfKey","key","o","length","indexOf","getValueByIndex","index","getValue","setValue","value","keepIndex","_","exists","remove","push","setByIndex","order","ArgumentOutOfRangeException","importValues","values","handleUpdate","changed","i","setValues","_i","arguments","removeByIndex","getKeys","filter","containsKey","StringKeyDictionary","defineProperty"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,mBAAoB,wBAAyB,gDAAiD,SAAUC,EAASC,EAASC,EAAcC,EAAuBC,GACzL,YCAJ,IAAMC,GAAY,OAElBC,EAAA,SAAAC,GAOC,QAAAD,KAECC,EAAAC,KAAAnB,MAJOA,KAAAoB,UA8ET,MAlFQrB,WAAAkB,EAAAC,GAWPD,EAAAV,UAAAc,WAAA,SAAWC,GAEV,GAAIC,GAAIvB,KAAKoB,MACb,OAAOG,GAAEC,OAASD,EAAEE,QAAQH,EAAK,GAAK,IAGvCL,EAAAV,UAAAmB,gBAAA,SAAgBC,GAEf,GAAIJ,GAAIvB,KAAKoB,MACb,OAAOO,GAAMJ,EAAEC,OAASxB,KAAK4B,SAASL,EAAEI,IAAUX,GAInDC,EAAAV,UAAAsB,SAAA,SAASP,EAAYQ,EAAcC,GAGlC,GAAIC,GAAIhC,KAAMiC,EAA6B,IAApBD,EAAEX,WAAWC,EAMpC,OALIW,IAAWH,IAAQd,IAASe,EAExBE,GAAUH,IAAQd,IAAUe,GACnClB,EAAaqB,OAAOF,EAAEZ,OAAQE,GAF9BU,EAAEZ,OAAOe,KAAKb,GAIRJ,EAAAX,UAAMsB,SAAQV,KAAAnB,KAACsB,EAAKQ,IAG5Bb,EAAAV,UAAA6B,WAAA,SAAWT,EAAcG,GAExB,GAAIE,GAAIhC,KAAMqC,EAAQL,EAAEZ,MACxB,IAAS,EAANO,EACF,KAAM,IAAIZ,GAAAuB,4BAA4B,QAASX,EAAO,qBACvD,IAAGA,GAAOU,EAAMb,OACf,KAAM,IAAIT,GAAAuB,4BAA4B,QAASX,EAAO,6BACvD,OAAOK,GAAEH,SAASQ,EAAMV,GAAQG,IAIjCb,EAAAV,UAAAgC,aAAA,SAAaC,GAEZ,GAAIR,GAAIhC,IACR,OAAOgC,GAAES,aACR,WAGC,IAAI,GADAC,IAAkB,EACdC,EAAI,EAAGA,EAAEH,EAAOhB,OAAQmB,IAE5BX,EAAEI,WAAWO,EAAGH,EAAOG,MACzBD,GAAU,EAEZ,OAAOA,MAOVzB,EAAAV,UAAAqC,UAAA,WDxBW,ICwBD,GAAAJ,MAAAK,EAAA,EAAAA,EAAAC,UAAAtB,OAAAqB,IAAAL,EAAAK,EAAA,GAAAC,UAAAD,EAET,OAAO7C,MAAKuC,aAAaC,IAG1BvB,EAAAV,UAAAwC,cAAA,SAAcpB,GAEb,MAAO3B,MAAKoC,WAAWT,EAAOX,IAGrBC,EAAAV,UAAAyC,QAAV,WAEC,GAAIhB,GAAIhC,KAAMuB,EAAIS,EAAEZ,MACpB,OAAOG,GAAEC,QAAUD,EAAE0B,OAAO,SAAA3B,GAAM,MAAAU,GAAEkB,YAAY5B,UAGlDL,GAlFQH,EAAAqC,oBADKvC,GAAAK,2BAA0BA,EAqFvCT,OAAA4C,eAAAxC,EAAA,cAAAkB,OAAA,ID1BIlB,EAAAA,WC0BWK","file":"System/Collections/Dictionaries/OrderedStringKeyDictionary.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine([\"require\", \"exports\", \"../Array/Utility\", \"./StringKeyDictionary\", \"../../Exceptions/ArgumentOutOfRangeException\"], function (require, exports, ArrayUtility, StringKeyDictionary_1, ArgumentOutOfRangeException_1) {\n    \"use strict\";\n    var VOID0 = void 0;\n    var OrderedStringKeyDictionary = (function (_super) {\n        __extends(OrderedStringKeyDictionary, _super);\n        function OrderedStringKeyDictionary() {\n            _super.call(this);\n            this._order = [];\n        }\n        OrderedStringKeyDictionary.prototype.indexOfKey = function (key) {\n            var o = this._order;\n            return o.length ? o.indexOf(key, 0) : -1;\n        };\n        OrderedStringKeyDictionary.prototype.getValueByIndex = function (index) {\n            var o = this._order;\n            return index < o.length ? this.getValue(o[index]) : VOID0;\n        };\n        OrderedStringKeyDictionary.prototype.setValue = function (key, value, keepIndex) {\n            var _ = this, exists = _.indexOfKey(key) != -1;\n            if (!exists && (value !== VOID0 || keepIndex))\n                _._order.push(key);\n            else if (exists && value === VOID0 && !keepIndex)\n                ArrayUtility.remove(_._order, key);\n            return _super.prototype.setValue.call(this, key, value);\n        };\n        OrderedStringKeyDictionary.prototype.setByIndex = function (index, value) {\n            var _ = this, order = _._order;\n            if (index < 0)\n                throw new ArgumentOutOfRangeException_1.ArgumentOutOfRangeException('index', index, 'Is less than zero.');\n            if (index >= order.length)\n                throw new ArgumentOutOfRangeException_1.ArgumentOutOfRangeException('index', index, 'Is greater than the count.');\n            return _.setValue(order[index], value);\n        };\n        OrderedStringKeyDictionary.prototype.importValues = function (values) {\n            var _ = this;\n            return _.handleUpdate(function () {\n                var changed = false;\n                for (var i = 0; i < values.length; i++) {\n                    if (_.setByIndex(i, values[i]))\n                        changed = true;\n                }\n                return changed;\n            });\n        };\n        OrderedStringKeyDictionary.prototype.setValues = function () {\n            var values = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                values[_i - 0] = arguments[_i];\n            }\n            return this.importValues(values);\n        };\n        OrderedStringKeyDictionary.prototype.removeByIndex = function (index) {\n            return this.setByIndex(index, VOID0);\n        };\n        OrderedStringKeyDictionary.prototype.getKeys = function () {\n            var _ = this, o = _._order;\n            return o.length && o.filter(function (key) { return _.containsKey(key); }) || [];\n        };\n        return OrderedStringKeyDictionary;\n    }(StringKeyDictionary_1.StringKeyDictionary));\n    exports.OrderedStringKeyDictionary = OrderedStringKeyDictionary;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = OrderedStringKeyDictionary;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport * as ArrayUtility from \"../Array/Utility\";\r\nimport {StringKeyDictionary} from \"./StringKeyDictionary\";\r\nimport {ArgumentOutOfRangeException} from \"../../Exceptions/ArgumentOutOfRangeException\";\r\nimport {IOrderedDictionary} from \"./IDictionary\";\r\n\r\nconst VOID0:any = void 0;\r\n\r\nexport class OrderedStringKeyDictionary<TValue>\r\nextends StringKeyDictionary<TValue> implements IOrderedDictionary<string, TValue>\r\n{\r\n\r\n\t// noinspection JSMismatchedCollectionQueryUpdate\r\n\tprivate _order:string[] = []; // Maintains indexes.\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tindexOfKey(key:string):number\r\n\t{\r\n\t\tvar o = this._order;\r\n\t\treturn o.length ? o.indexOf(key, 0) : -1;\r\n\t}\r\n\r\n\tgetValueByIndex(index:number):TValue\r\n\t{\r\n\t\tvar o = this._order;\r\n\t\treturn index<o.length ? this.getValue(o[index]) : VOID0;\r\n\t}\r\n\r\n\t// adding keepIndex allows for clearing a value while still retaining it's index.\r\n\tsetValue(key:string, value:TValue, keepIndex?:boolean):boolean\r\n\t{\r\n\t\t// TODO: This may be inefficient and could be improved.\r\n\t\tvar _ = this, exists = _.indexOfKey(key)!= -1;\r\n\t\tif(!exists && (value!==VOID0 || keepIndex))\r\n\t\t\t_._order.push(key);\r\n\t\telse if(exists && value===VOID0 && !keepIndex)\r\n\t\t\tArrayUtility.remove(_._order, key);\r\n\r\n\t\treturn super.setValue(key, value);\r\n\t}\r\n\r\n\tsetByIndex(index:number, value:TValue):boolean\r\n\t{\r\n\t\tvar _ = this, order = _._order;\r\n\t\tif(index<0)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is less than zero.');\r\n\t\tif(index>=order.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is greater than the count.');\r\n\t\treturn _.setValue(order[index], value);\r\n\t}\r\n\r\n\t// importValues([x,y,z]);\r\n\timportValues(values:TValue[]):boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\t\treturn _.handleUpdate(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar changed:boolean = false;\r\n\t\t\t\tfor(let i = 0; i<values.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_.setByIndex(i, values[i]))\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn changed;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// setValues(x,y,z);\r\n\tsetValues(...values:TValue[]):boolean\r\n\t{\r\n\t\treturn this.importValues(values);\r\n\t}\r\n\r\n\tremoveByIndex(index:number):boolean\r\n\t{\r\n\t\treturn this.setByIndex(index, VOID0);\r\n\t}\r\n\r\n\tprotected getKeys():string[]\r\n\t{\r\n\t\tvar _ = this, o = _._order;\r\n\t\treturn o.length && o.filter(key=> _.containsKey(key)) || [];\r\n\t}\r\n\r\n}\r\n\r\nexport default OrderedStringKeyDictionary;\r\n"]}