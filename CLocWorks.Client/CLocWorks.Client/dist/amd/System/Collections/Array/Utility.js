/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../../Types","../../Integer","../../Compare","../../Exceptions/ArgumentException","../../Exceptions/ArgumentNullException","../../Exceptions/ArgumentOutOfRangeException"],function(e,n,t,r,i,o,u,a){"use strict";function f(e){r.Integer.assert(e,"length");var n;return e>65536?n=new Array(e):(n=[],n.length=e),n}function c(e,n,t){return void 0===n&&(n=0),void 0===t&&(t=1/0),e?g(e,f(Math.min(t,Math.max(e.length-n,0))),n,0,t):e}function g(e,n,t,r,i){if(void 0===t&&(t=0),void 0===r&&(r=0),void 0===i&&(i=1/0),!e)throw new u.ArgumentNullException("source",b);if(!n)throw new u.ArgumentNullException("destination",b);if(0>t)throw new a.ArgumentOutOfRangeException("sourceIndex",t,T);var o=e.length;if(!o)return n;if(t>=o)throw new a.ArgumentOutOfRangeException("sourceIndex",t,"Must be less than the length of the source array.");if(n.length<0)throw new a.ArgumentOutOfRangeException("destinationIndex",r,T);var f=e.length-t;if(isFinite(i)&&i>f)throw new a.ArgumentOutOfRangeException("sourceIndex",t,"Source index + length cannot exceed the length of the source array.");i=Math.min(i,f);var c=r+i;c>n.length&&(n.length=c);for(var g=0;i>g;g++)n[r+g]=e[t+g];return n}function s(e,n,r){void 0===r&&(r=i.areEqual);var o=e&&e.length;if(o){if(Array.isArray(e)&&!t.Type.isTrueNaN(n))return e.indexOf(n);for(var u=0;o>u;u++)if(r(e[u],n))return u}return-1}function l(e,n,t){return void 0===t&&(t=i.areEqual),-1!=s(e,n,t)}function h(e,n,t,r){if(!e||!e.length||0===r)return 0;if(0>r)throw new a.ArgumentOutOfRangeException("max",r,T);r||(r=1/0);for(var i=0,o=0,u=e.length;u>o&&(e[o]!==n||(e[o]=t,++i,i!=r));o++);return i}function p(e,n,t,i){if(void 0===t&&(t=0),e){if(r.Integer.assertZeroOrGreater(t,"start"),i||0===i||(i=e.length),r.Integer.assert(i,"stop"),t>i)throw new a.ArgumentOutOfRangeException("stop",i,"is less than start");for(var o=t;i>o;o++)e[o]=n}}function v(e,n,t){void 0===n&&(n=0),p(e,null,n,t)}function x(e,n,t){if(void 0===t&&(t=i.areEqual),!e)throw new u.ArgumentNullException("array",b);var r=e.length,o=!r||!l(e,n,t);return o&&(e[r]=n),o}function w(e,n){if(!e)throw new u.ArgumentNullException("array",b);if(!t.Type.isFunction(n))throw new o.ArgumentException("predicate","Must be a function.");var r=e.length;if(Array.isArray(e)){for(var i=0;r>i;i++)if(n(e[i]))return i}else for(var i=0;r>i;i++)if(i in e&&n(e[i]))return i;return-1}function d(e,n){if(e&&n)for(var t=0;t<e.length&&n(e[t],t)!==!1;t++);}function m(e,n){if(e&&n)for(var t=0;t<e.length;t++)e[t]=n(e[t])}function O(e,n){if(!e)throw new u.ArgumentNullException("array",b);if(r.Integer.assert(n,"index"),0>n)throw new a.ArgumentOutOfRangeException("index",n,T);var t=n<e.length;return t&&e.splice(n,1),t}function E(e,n,t,r){if(void 0===r&&(r=i.areEqual),!e||!e.length||0===t)return 0;if(0>t)throw new a.ArgumentOutOfRangeException("max",t,T);var o=0;if(t&&isFinite(t)){for(var u=[],f=0,c=e.length;c>f&&(!r(e[f],n)||(u.push(f),++o,o!=t));f++);for(var f=u.length-1;f>=0;f--)e.splice(u[f],1)}else for(var f=e.length-1;f>=0;f--)r(e[f],n)&&(e.splice(f,1),++o);return o}function A(e,n){if(r.Integer.assert(n,"count"),0>n)throw new a.ArgumentOutOfRangeException("count",n,T);for(var t=f(n),i=0;n>i;i++)t[i]=e;return t}function y(e,n,t){if(void 0===t&&(t=1),isNaN(e)||!isFinite(e))throw new a.ArgumentOutOfRangeException("first",e,q);if(isNaN(n)||!isFinite(n))throw new a.ArgumentOutOfRangeException("count",n,q);if(0>n)throw new a.ArgumentOutOfRangeException("count",n,T);for(var r=f(n),i=0;n>i;i++)r[i]=e,e+=t;return r}function R(e,n,t){if(void 0===t&&(t=1),0==t)throw new a.ArgumentOutOfRangeException("step",t,M);return y(e,(n-e)/t,t)}function I(e){var n={};return e.filter(function(e){return!(e in n)&&(n[e]=!0)})}function N(e,n){void 0===n&&(n=0);for(var t=[],r=0;r<e.length;r++){var i=e[r];if(Array.isArray(i)){n>0&&(i=N(i,n-1));for(var o=0;o<i.length;o++)t.push(i[o])}else t.push(i)}return t}n.initialize=f,n.copy=c;var b="Cannot be null.",M="Cannot be zero.",T="Cannot be less than zero.",q="Must be a valid finite number";n.copyTo=g,n.indexOf=s,n.contains=l,n.replace=h,n.updateRange=p,n.clear=v,n.register=x,n.findIndex=w,n.forEach=d,n.applyTo=m,n.removeIndex=O,n.remove=E,n.repeat=A,n.range=y,n.rangeUntil=R,n.distinct=I,n.flatten=N});
//# sourceMappingURL=Utility.js.map
