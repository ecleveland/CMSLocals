{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.js","System/Collections/Enumeration/ArrayEnumerator.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","IndexEnumerator_1","Types_1","ArrayEnumerator","_super","arrayOrFactory","start","step","call","array","Type","isFunction","source","pointer","length","IndexEnumerator","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,oBAAqB,eAAgB,SAAUC,EAASC,EAASC,EAAmBC,GAC9G,YCAJ,IAAAC,GAAA,SAAAC,GAIC,QAAAD,GAAYE,EAAoBC,EAAkBC,GAAlB,SAAAD,IAAAA,EAAA,GAAkB,SAAAC,IAAAA,EAAA,GAEjDH,EAAAI,KAAApB,KACC,WAEC,GAAIqB,GAAQP,EAAAQ,KAAKC,WAAWN,GAAkBA,IAAmBA,CACjE,QACCO,OAAQH,EACRI,QAASP,EACTQ,OAAQL,EAAQA,EAAMK,OAAS,EAC/BP,KAAMA,KAKX,MAnBwCpB,WAAAgB,EAAAC,GAmBxCD,GAnBwCF,EAAAc,gBAA3Bf,GAAAG,gBAAeA,EAqB5BP,OAAAoB,eAAAhB,EAAA,cAAAiB,OAAA,IDDIjB,EAAAA,WCCWG","file":"System/Collections/Enumeration/ArrayEnumerator.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine([\"require\", \"exports\", \"./IndexEnumerator\", \"../../Types\"], function (require, exports, IndexEnumerator_1, Types_1) {\n    \"use strict\";\n    var ArrayEnumerator = (function (_super) {\n        __extends(ArrayEnumerator, _super);\n        function ArrayEnumerator(arrayOrFactory, start, step) {\n            if (start === void 0) { start = 0; }\n            if (step === void 0) { step = 1; }\n            _super.call(this, function () {\n                var array = Types_1.Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\n                return {\n                    source: array,\n                    pointer: start,\n                    length: array ? array.length : 0,\n                    step: step\n                };\n            });\n        }\n        return ArrayEnumerator;\n    }(IndexEnumerator_1.IndexEnumerator));\n    exports.ArrayEnumerator = ArrayEnumerator;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ArrayEnumerator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IndexEnumerator} from \"./IndexEnumerator\";\r\nimport {Type} from \"../../Types\";\r\nimport {IArray} from \"../Array/IArray\";\r\n\r\nexport class ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => IArray<T>, start?:number, step?:number);\r\n\tconstructor(array:IArray<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: array,\r\n\t\t\t\t\tpointer: start,\r\n\t\t\t\t\tlength: array ? array.length : 0,\r\n\t\t\t\t\tstep: step\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ArrayEnumerator;"]}