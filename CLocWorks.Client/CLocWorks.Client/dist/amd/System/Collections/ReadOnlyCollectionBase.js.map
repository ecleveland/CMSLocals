{"version":3,"sources":["System/Collections/ReadOnlyCollectionBase.js","System/Collections/ReadOnlyCollectionBase.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","CollectionBase_1","ReadOnlyCollectionBase","_super","apply","arguments","getCount","_getCount","getIsReadOnly","_addInternal","entry","_removeInternal","max","_clearInternal","getEnumerator","_getEnumerator","CollectionBase","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,oBAAqB,SAAUC,EAASC,EAASC,GAC3E,YCFJ,IAAAC,GAAA,SAAAC,GAAA,QAAAD,KACQC,EAAAC,MAAAhB,KAAAiB,WAqCR,MArCQlB,WAAAe,EAAAC,GAKGD,EAAAP,UAAAW,SAAV,WAEC,MAAOlB,MAAKmB,aAGHL,EAAAP,UAAAa,cAAV,WAEC,OAAO,GAGEN,EAAAP,UAAAc,aAAV,SAAuBC,GAEtB,OAAO,GAGER,EAAAP,UAAAgB,gBAAV,SAA0BD,EAASE,GAElC,MAAO,IAGEV,EAAAP,UAAAkB,eAAV,WAEC,MAAO,IAKRX,EAAAP,UAAAmB,cAAA,WAEC,MAAO1B,MAAK2B,kBAGdb,GArCQD,EAAAe,eADchB,GAAAE,uBAAsBA,EAwC5CN,OAAAqB,eAAAjB,EAAA,cAAAkB,OAAA,IDVIlB,EAAAA,WCUWE","file":"System/Collections/ReadOnlyCollectionBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine([\"require\", \"exports\", \"./CollectionBase\"], function (require, exports, CollectionBase_1) {\n    \"use strict\";\n    var ReadOnlyCollectionBase = (function (_super) {\n        __extends(ReadOnlyCollectionBase, _super);\n        function ReadOnlyCollectionBase() {\n            _super.apply(this, arguments);\n        }\n        ReadOnlyCollectionBase.prototype.getCount = function () {\n            return this._getCount();\n        };\n        ReadOnlyCollectionBase.prototype.getIsReadOnly = function () {\n            return true;\n        };\n        ReadOnlyCollectionBase.prototype._addInternal = function (entry) {\n            return false;\n        };\n        ReadOnlyCollectionBase.prototype._removeInternal = function (entry, max) {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype._clearInternal = function () {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype.getEnumerator = function () {\n            return this._getEnumerator();\n        };\n        return ReadOnlyCollectionBase;\n    }(CollectionBase_1.CollectionBase));\n    exports.ReadOnlyCollectionBase = ReadOnlyCollectionBase;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ReadOnlyCollectionBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\n\r\nexport abstract class ReadOnlyCollectionBase<T>\r\nextends CollectionBase<T>\r\n{\r\n\r\n\tprotected _getCount:()=>number;\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._getCount();\r\n\t}\r\n\r\n\tprotected getIsReadOnly():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected _addInternal(entry:T):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _removeInternal(entry:T, max?:number):number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _getEnumerator:()=>IEnumerator<T>;\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\treturn this._getEnumerator();\r\n\t}\r\n\r\n}\r\n\r\nexport default ReadOnlyCollectionBase;"]}