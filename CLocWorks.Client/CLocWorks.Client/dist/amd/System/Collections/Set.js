/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};define(["require","exports","../Types","../Exceptions/ArgumentException","./SetBase"],function(e,t,r,n,o){"use strict";function i(e,t){if(void 0===t&&(t=1),e&&t)for(var r=0,n=Object.keys(e);r<n.length;r++){var o=n[r],s=e[o];delete e[o],i(s,t-1)}}var s=function(e){function t(){e.apply(this,arguments)}return __extends(t,e),t.prototype.newUsing=function(e){return new t(e)},t.prototype._addInternal=function(e){var t=this;if(!t.contains(e)){var o=typeof e;if(!r.Type.isPrimitive(o))throw new n.ArgumentException("item","A Set can only index primitives.  Complex objects require a HashSet.");var i=t._registry,s=i&&i[o];i||(t._registry=i={}),s||(i[o]=s={});var p={value:e};return t._getSet().addNode(p),s[e]=p,!0}return!1},t.prototype._clearInternal=function(){return i(this._registry,2),e.prototype._clearInternal.call(this)},t.prototype._onDispose=function(){e.prototype._onDispose.call(this),this._registry=null},t.prototype._getNode=function(e){var t=this._registry,r=t&&t[typeof e];return r&&r[e]},t.prototype._removeInternal=function(e,t){if(void 0===t&&(t=1/0),0===t)return 0;var r=this._registry,n=r&&r[typeof e],o=n&&n[e];if(o){delete n[e];var i=this._set;if(i&&i.removeNode(o))return 1}return 0},t}(o.SetBase);t.Set=s,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=s});
//# sourceMappingURL=Set.js.map
